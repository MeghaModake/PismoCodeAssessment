openapi: 3.1.0
info:
  title: Pismo API
  version: 1.0.0
  description: REST API for managing accounts and financial transactions
servers:
  - url: http://localhost:8080

paths:
  # --------------------------
  # Accounts Endpoints
  # --------------------------
  /accounts:
    post:
      summary: Create a new account
      operationId: createAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountsRequest'
      responses:
        '201':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Bad request (invalid input)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse500'

  /accounts/{accountId}:
    get:
      summary: Get account by ID
      operationId: getAccountById
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Account retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # --------------------------
  # Transactions Endpoints
  # --------------------------
  /transactions:
    post:
      summary: Create a transaction
      operationId: createTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionRequest'
      responses:
        '201':
          description: Transaction created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid request (bad JSON or missing fields)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation failed (business logic error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    # --------------------------
    # Account Schemas
    # --------------------------
    CreateAccountsRequest:
      type: object
      required:
        - document_number
      properties:
        document_number:
          type: string
          example: 12345678901

    Account:
      type: object
      properties:
        account_id:
          type: integer
          example: 1
        document_number:
          type: string
          example: 12345678901

    # --------------------------
    # Transaction Schemas
    # --------------------------
    CreateTransactionRequest:
      type: object
      required:
        - account_id
        - operation_type_id
        - amount
      properties:
        account_id:
          type: integer
          example: 1
        operation_type_id:
          type: integer
          example: 4
        amount:
          type: number
          format: float
          example: 123.45

    Transaction:
      type: object
      properties:
        transaction_id:
          type: integer
          example: 1001
        account_id:
          type: integer
          example: 1
        operation_type_id:
          type: integer
          example: 4
        amount:
          type: number
          format: float
          example: 123.45

    # --------------------------
    # Generic Error Schema
    # --------------------------
    ErrorResponse500:
      type: object
      properties:
        error_id:
          type: number
          example: :500
        error_message:
          type: string
          example: validation failed
        error_details:
          type: string
          example: "Wrong Account ID, Account does not exists: 1"
    ErrorResponse400:
      type: object
      properties:
        error_id:
          type: number
          example: :400
        error_message:
          type: string
          example: invalid request
        error_details:
          type: string
          example: "Wrong input"
